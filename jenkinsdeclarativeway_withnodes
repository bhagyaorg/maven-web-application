pipeline{
   
    agent{
    label "nodes"// nodes is a label which i configured while creating node
    }
    //for parameterised project do it in declarative directive generator
  parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Select branch name', name: 'BranchName'
}
 options { //in declarative directive generator for time stamp and discard old builds
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}
    tools{ // for maven
        maven "maven 3.8.6"
    }
    
    stages{
        stage('CheckoutCode'){
            steps{
                slacknotifications("STARTED")
            git branch: "$params.BranchName", credentialsId: '0414987a-3353-4494-a8bc-cf68f44b45c8', url: 'https://github.com/bhagyaorg/maven-web-application.git'
        }
        }
        stage('build'){
         steps{
             sh "mvn clean package"
                }   
    }
    /*    stage('generatesqreport'){
            steps{
                sh "mvn sonar:sonar"
            }
        }
        stage('uploadtonesux'){
            steps{
                sh "mvn clean deploy"
                            }
        }
        stage("deployto Tomcatserver"){
            steps{
                sshagent(['01462336-58f3-408d-a2a6-5ea93e60a781']) {// plugin for authentication in tom cat using pem file contents
             sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.109.185.215:/opt/apache-tomcat-9.0.64/webapps/" 
            }
        }*/
    }
    
    post {// for slack notification 
  success {
    slacknotifications(currentBuild.result)// function call
  }
  failure {
    slacknotifications(currentBuild.result)// function call
  }
}

}
def slacknotifications(String buildStatus = 'STARTED') {// function definition
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
